{"version":3,"sources":["state/actions.js","components/helpers/constants.js","components/Card/index.jsx","components/helpers/index.js","components/Ability/index.js","components/Abilities/index.jsx","components/LightBox/index.jsx","components/Menu/index.jsx","containers/MainLayout.jsx","registerServiceWorker.js","state/reducer.js","state/store.js","index.js"],"names":["stats","SPEED","SDEF","SATT","DEF","ATT","HP","NOSTAT","actionNames","FETCH_POKEDEX_SUCCEDED","FETCH_POKEDEX_FAILED","FETCH_LOADING","SORT_BY_SPEED_ASC","SORT_BY_SPECIAL_DEF_ASC","SORT_BY_SPECIAL_ATT_ASC","SORT_BY_DEFENSE_ASC","SORT_BY_ATTACK_ASC","SORT_BY_HIT_POINTS_ASC","SORT_BY_SPEED_DES","SORT_BY_SPECIAL_DEF_DES","SORT_BY_SPECIAL_ATT_DES","SORT_BY_DEFENSE_DES","SORT_BY_ATTACK_DES","SORT_BY_HIT_POINTS_DES","TOGGLE","TOGGLE_TYPES","CURRENT_ID","CURRENT_TYPE","FILTER_BY_TYPE","fetchData","type","currentOrder","dispatch","getState","fetch","then","res","json","pokemons","payload","slice","filter","item","indexOf","catch","error","TYPES","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","TYPENAMES","ACTIONS","Card","handleClick","props","_this","pokemon","id","style","this","name","image","currentFilter","currFilter","currentStat","types","map","index","react_default","a","createElement","className","key","backgroundColor","concat","statClass","console","log","STATS","toLowerCase","length","backgroundImage","onClick","alt","src","Component","hexToRgba","color","alpha","arguments","undefined","hue","charAt","substr","r","g","b","values","split","parseInt","toString","Ability","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","display","state","abilities","moves","isAbility","buttonClassNames","button","description","effect","accuracy","damage","title","Abilities","getButton","Ability_Ability","_this2","response","data","_this3","items","list","LightBox","handleSlide","e","currId","findIndex","totalItems","newId","target","classList","contains","fallBackId","handleButtonClick","stopPropagation","getGradient","colora","colorb","getHeader","styleNames","currentData","react","styleBg","styleBox","classNames","colorBgA","colorBgB","colorBoxA","colorBoxB","gradientBg","gradientBox","speed","specialDefense","specialAttack","defense","attack","hp","Abilities_Abilities","Menu","handleReset","sDef","sAtt","def","att","sortBySpeed","action","newState","currentType","sortBySDef","sortBySAtt","sortByDef","sortByAtt","sortByHP","toggleTypes","getClassName","dirClass","handleType","innerText","getButtons","typeClass","MainLayout","pokeDexData","pokedexData","displayBox","lightBox","currType","pokemonCards","Card_Card","Menu_Menu","LightBox_LightBox","connect","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","combineReducers","bodyResponse","sort","createStore","reducer","applyMiddleware","thunk","page","es","store","src_containers_MainLayout","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"8WAAaA,EAAQ,CACjBC,MAAQ,QACRC,KAAQ,OACRC,KAAQ,OACRC,IAAQ,MACRC,IAAQ,MACRC,GAAQ,KACRC,OAAQ,UAGCC,EAAc,CACzBC,uBAA0B,yBAC1BC,qBAA0B,uBAC1BC,cAA0B,gBAC1BC,kBAA0B,oBAC1BC,wBAA0B,0BAC1BC,wBAA0B,0BAC1BC,oBAA0B,sBAC1BC,mBAA0B,qBAC1BC,uBAA0B,yBAC1BC,kBAA0B,oBAC1BC,wBAA0B,0BAC1BC,wBAA0B,0BAC1BC,oBAA0B,sBAC1BC,mBAA0B,qBAC1BC,uBAA0B,yBAC1BC,OAA0B,SAC1BC,aAA0B,eAC1BxB,MAA0BD,EAAMC,MAChCC,KAA0BF,EAAME,KAChCC,KAA0BH,EAAMG,KAChCC,IAA0BJ,EAAMI,IAChCC,IAA0BL,EAAMK,IAChCC,GAA0BN,EAAMM,GAChCC,OAA0BP,EAAMO,OAChCmB,WAA0B,aAC1BC,aAA0B,eAC1BC,eAA0B,kBAGrB,SAASC,EAAUC,EAAMC,GAC5B,OAAO,SAACC,EAAUC,GAOd,OAJAD,EAAS,CACLF,KAAMtB,EAAYG,gBAGfuB,MANU,sBAOZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAEEN,EADDF,GAAiB,QAATA,EACE,CACLA,KAAMtB,EAAYC,uBAClB8B,QAASD,EAASE,QAAQC,OAAO,SAACC,GAAD,OAASA,EAAK,GAAGC,QAAQb,IAAO,KAG5D,CACLA,KAAMtB,EAAYC,uBAClB8B,QAASD,MAIpBH,KAAK,SAAAC,GACCN,GACCE,EAAS,CACLF,KAAMtB,EAAYmB,aAClBY,QAAST,MAIpBK,KAAK,SAAAC,GACCL,GACCC,EAAS,CACLF,KAAMC,MAIjBa,MAAM,SAAAC,GACHb,EAAS,CACLF,KAAMtB,EAAYE,qBAClB6B,QAASM,iBCjFvBC,EAAQ,CACVC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,UAGLC,EAAY,CACd,MACA,MACA,OACA,SACA,WACA,QACA,WACA,OACA,SACA,QACA,QACA,SACA,MACA,SACA,SACA,UACA,OACA,QACA,SAGEC,EAAU,CACZ1C,OAAQ,SACRE,WAAY,cCxCKyC,6MACnBC,YAAc,WACZ,IAAMC,EAAQC,EAAKD,MACbE,EAAWF,GAASA,EAAME,SAAY,GACtCvC,EAAWqC,EAAMrC,SACjBwC,EAAKD,EAAQ,GAEhBvC,GAAgC,oBAAbA,IACpBA,EAAS,CACPF,KAAMoC,EAAQxC,WACda,QAASiC,IAGXxC,EAAS,CACPF,KAAMoC,EAAQ1C,mFAMlB,IAWIiD,EAXEJ,EAAQK,KAAKL,MACbE,EAAWF,GAASA,EAAME,SAAY,GACtCC,EAAKD,EAAQ,GACbI,EAAOJ,EAAQ,GACfK,EAAQL,EAAQ,GAChBzC,EAAOyC,EAAQ,GACfvE,EAAQuE,EAAQ,IAAM,GACtBM,EAAgBR,GAASA,EAAMS,WAC/BC,EAAeF,GAAe,GAAM7E,EAAM6E,GAC1CG,EAAQlD,EAAKmD,IAAI,SAACvC,EAAMwC,GAAP,OAAeC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBC,IAAK7C,EAAM+B,MAAO,CAACe,gBAAe,IAAAC,OAAM3C,EAAMhB,EAAKoD,OAAaxC,KAClIgD,EAAY,GAKhB,OAFAC,QAAQC,IAAIb,GAEJF,GACN,KAAK,EACHa,EAAYG,EAAM5F,MAClB,MACF,KAAK,EACHyF,EAAYG,EAAM3F,KAClB,MACF,KAAK,EACHwF,EAAYG,EAAM1F,KAClB,MACF,KAAK,EACHuF,EAAYG,EAAMzF,IAClB,MACF,KAAK,EACHsF,EAAYG,EAAMxF,IAClB,MACF,KAAK,EACHqF,EAAYG,EAAMvF,GAClB,MACF,QACEoF,EAAYG,EAAMtF,OAgBtB,OAZAmF,EAAYA,EAAUI,cAEnBhE,EAAKiE,QAAU,EAChBtB,EAAQ,CACNuB,gBAAe,+BAAAP,OAAiC3C,EAAMhB,EAAK,IAA5C,SAAA2D,OAAuD3C,EAAMhB,EAAK,IAAlE,WAEQ,IAAhBA,EAAKiE,SACdtB,EAAQ,CACNe,gBAAe,IAAAC,OAAM3C,EAAMhB,EAAK,OAKhCqD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOW,QAASvB,KAAKN,YAAaK,MAAOA,GACzDU,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAoBH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,gBAAiBX,IACtEQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWd,GACzBK,GAAiB,GAAsB,MAAjBA,GAA0BM,EAAAC,EAAAC,cAAA,QAAMC,UAAS,iBAAAG,OAAmBC,IAAcX,GAClGI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaX,GAC7BQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaY,IAAKvB,EAAMwB,IAAG,gBAAAV,OAAkBb,KAC5DO,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXN,WA/EqBoB,mBCLlC,SAASC,EAAUC,GAA2B,IAApBC,EAAoBC,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAZ,EAAGE,EAASF,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAIvC,GAHwB,MAApBF,EAAMK,OAAO,KACbL,EAAQA,EAAMM,OAAO,IAEpBN,EAAMP,OAAS,GAAOO,EAAMP,OAAS,EACtC,MAAO,GAEX,IACIc,EACAC,EACAC,EAHAC,EAASV,EAAMW,MAAM,IAKzB,GAAqB,IAAjBX,EAAMP,OAENe,EADAD,EAAIK,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAE1DJ,EAAIF,OACD,GAAqB,IAAjBP,EAAMP,OACbc,EAAIK,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAC1DL,EAAII,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAC1DJ,EAAIG,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,QACvD,IAAqB,IAAjBb,EAAMP,OAKb,OAAO,EAJPc,EAAIK,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAC1DL,EAAII,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAC1DJ,EAAIG,SAASF,EAAO,GAAGG,WAAaH,EAAO,GAAGG,WAAY,IAa9D,OAHAL,GAJAA,GAAQJ,GAIC,EAAK,EAAII,EAClBC,GAJAA,GAAQL,GAIC,EAAK,EAAIK,EAElB,QAAAtB,OAJAoB,GAJAA,GAAQH,GAIC,EAAK,EAAIG,EAIlB,MAAApB,OAAqBqB,EAArB,MAAArB,OAA2BsB,EAA3B,MAAAtB,OAAiCc,EAAjC,qBC/BiBa,cACjB,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAA+C,OAAAC,EAAA,EAAAD,CAAA3C,KAAA0C,IACf9C,EAAA+C,OAAAE,EAAA,EAAAF,CAAA3C,KAAA2C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/C,KAAML,KAKVD,YAAc,WACVE,EAAKoD,SAAS,CACVC,SAAUrD,EAAKsD,MAAMD,WALzBrD,EAAKsD,MAAQ,CAACD,SAAS,GAHRrD,wEAaf,IAAMD,EAAQK,KAAKL,MACbwD,EAAYxD,EAAMwD,UAClBF,EAAUjD,KAAKkD,MAAMD,QACrBG,EAAQzD,EAAMyD,MACdC,EAAYF,EACZG,EAAgB,kBAAAvC,OAAqBkC,GAAW,WAClDM,EAAS,GAEb,GAAGF,EAAW,CACV,IAAMpD,EAAOkD,EAAU,GACjBK,EAAcL,EAAU,GAE9BI,EACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAW0C,EAAkB/B,QAASvB,KAAKN,aAC9CO,GAGDgD,GAAWxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACrB4C,QAKd,CACH,IAAMvD,EAAOmD,EAAM,GACbhG,EAAOgG,EAAM,GACbK,EAASL,EAAM,GACfM,EAAWN,EAAM,GACjBO,EAASP,EAAM,GAErBG,EACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQY,QAASvB,KAAKN,YAAakB,UAAW0C,EAAkBvD,MAAO,CAACe,gBAAe,GAAAC,OAAKY,EAAUvD,EAAMhB,GAAO,QAC5GsG,GAAYC,IACXlD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAER8C,GAAYjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBgD,MAAM,YACjDF,GAILC,GAAUlD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBgD,MAAM,UAC/CD,IAKjBlD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACXX,GAELQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeb,MAAO,CAACe,gBAAe,IAAAC,OAAM3C,EAAMhB,MAC7DA,IAIL6F,GAAWxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACrB6C,IAOrB,OACIhD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACR2C,UAhFmB7B,aCDhBmC,cACjB,SAAAA,EAAYlE,GAAO,IAAAC,EAAA,OAAA+C,OAAAC,EAAA,EAAAD,CAAA3C,KAAA6D,IACfjE,EAAA+C,OAAAE,EAAA,EAAAF,CAAA3C,KAAA2C,OAAAG,EAAA,EAAAH,CAAAkB,GAAAd,KAAA/C,KAAML,KAOVmE,UAAY,SAAC9F,GACT,IAAMkF,EAAQtD,EAAKsD,MACbC,EAAYD,EAAMC,WAAaD,EAAMC,UAAUnF,EAAK,GACpDoF,EAAQF,EAAME,OAASF,EAAME,MAAMpF,EAAK,GACxC6C,EAAOuC,GAASA,EAAM,IAAQD,GAAaA,EAAU,GAE3D,OACI1C,EAAAC,EAAAC,cAACoD,EAAD,CACIZ,UAAWA,EACXC,MAAOA,EACPvC,IAAKA,KAhBbjB,EAAKsD,MAAQ,CACTC,UAAW,GACXC,MAAO,IAJIxD,mFAuBC,IAAAoE,EAAAhE,KACFA,KAAKL,MACK0D,UAGpB7F,MAAM,wBACLC,KAAK,SAACwG,GACH,OAAOA,EAAStG,SAEnBF,KAAK,SAACyG,GACHF,EAAKhB,SAAS,CACVG,UAAWe,MAGlBhG,MACG8B,KAAKgD,SAAS,CACVG,UAAW,MAInB3F,MAAM,oBACLC,KAAK,SAACwG,GACH,OAAOA,EAAStG,SAEnBF,KAAK,SAACyG,GACHF,EAAKhB,SAAS,CACVI,MAAOc,MAGdhG,MACG8B,KAAKgD,SAAS,CACVI,MAAO,uCAMd,IAAAe,EAAAnE,KAICoE,GAHQpE,KAAKL,MACC0E,MAAQ,IAET9D,IAAI,SAACvC,GAAD,OACfmG,EAAKL,UAAU9F,KAIvB,OACIyC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACTwD,UAxEsB1C,aCElB4C,6MACjB5E,YAAc,WACV,IACMpC,EADQsC,EAAKD,MACIrC,SAEA,oBAAbA,GACNA,EAAS,CACLF,KAAMoC,EAAQ1C,YAK1ByH,YAAc,SAACC,GACX,IAAM7E,EAAQC,EAAKD,MACbG,EAAKH,EAAMG,GACXoE,EAAOvE,EAAMuE,MAAQ,GACrBO,EAASP,EAAK7C,QAAU6C,EAAKQ,UAAU,SAAC1G,GAAD,OAAQA,EAAK,KAAO8B,IAC3D6E,EAAahF,EAAMgF,WAAa,EAChCrH,EAAWqC,EAAMrC,SAEjBsH,EADgBJ,EAAEK,OAAOC,UACHC,SAAS,QAAWN,EAAS,EAAMA,EAAS,EACpEO,EAAcJ,GAAS,EAAKA,EAASD,EAEzCK,EAAcA,GAAcL,EAAcK,EAAa,EAEhC,oBAAb1H,GACNA,EAAS,CACLF,KAAMoC,EAAQxC,WACda,QAASqG,EAAKc,GAAY,QAKtCC,kBAAoB,SAACT,GACjBA,EAAEU,qBAGNC,YAAc,SAACC,EAAQC,GACnB,oCAAAtE,OAAqCqE,EAArC,QAAArE,OAAkDsE,GAAUD,EAA5D,aAGJE,UAAY,WACR,IAOIC,EAPE5F,EAAQC,EAAKD,MACbuE,EAAOvE,EAAMuE,MAAQ,GACrBpE,EAAKH,EAAMG,GACX2E,EAASP,EAAK7C,QAAU6C,EAAKQ,UAAU,SAAC1G,GAAD,OAAQA,EAAK,KAAO8B,IAC3D0F,EAActB,EAAKO,IAAW,GAC9BxE,EAAOuF,EAAY,GACnBpI,EAAOoI,EAAY,IAAM,GAS/B,OANGpI,EAAKiE,SACJkE,EAAa,CACT3D,MAAK,GAAAb,OAAKY,EAAUvD,EAAMhB,EAAK,IAAK,GAAK,OAK7CqD,EAAAC,EAAAC,cAAC8E,EAAA,SAAD,KACQhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCb,MAAOwF,GAAatF,GACnEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCb,MAAOwF,GAAatF,GACnEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCb,MAAOwF,GAAatF,GACnEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCb,MAAOwF,GAAatF,GACnEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBY,IAAKvB,EAAMwB,IAAG,aAAAV,OAAejB,EAAf,WAElDW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,IAAAG,OAAmCjB,EAAnC,KAAAiB,OAAyCd,8EAMrD,IAyBIyF,EACAC,EA1BEhG,EAAQK,KAAKL,MACbsD,EAAUtD,GAASA,EAAMsD,QAEzB2C,EAAU,YAAA7E,OADKkC,EAAU,OAAQ,IAEjCiB,EAAOvE,EAAMuE,MAAQ,GACrBpE,EAAKH,EAAMG,GACX2E,EAASP,EAAK7C,QAAU6C,EAAKQ,UAAU,SAAC1G,GAAD,OAAQA,EAAK,KAAO8B,IAC3D0F,EAActB,EAAKO,IAAW,GAC9BrH,EAAOoI,EAAY,IAAM,GACzBpC,EAAQoC,EAAY,IAAM,GAC1BrC,EAAYqC,EAAY,IAAM,GAC9BlF,EAAQlD,EAAKmD,IAAI,SAACvC,EAAMwC,GAAP,OAAeC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBC,IAAK7C,EAAM+B,MAAO,CAACe,gBAAe,IAAAC,OAAM3C,EAAMhB,EAAKoD,OAAaxC,KACpI6H,EAAWzI,EAAKiE,QAAUM,EAAUvD,EAAMhB,EAAK,IAAK,IACpD0I,EAAW1I,EAAKiE,QAAUjE,EAAK,IAAMuE,EAAUvD,EAAMhB,EAAK,IAAK,IAC/D2I,EAAY3I,EAAKiE,QAAUM,EAAUvD,EAAMhB,EAAK,IAAK,GACrD4I,EAAY5I,EAAKiE,QAAUjE,EAAK,IAAMuE,EAAUvD,EAAMhB,EAAK,IAAK,GAChE6I,EAAajG,KAAKmF,YAAYU,EAAUC,GACxCI,EAAclG,KAAKmF,YAAYY,EAAWC,GAC1C1K,EAASkK,GAAeA,EAAY,IAAO,GAC3CW,EAAQ7K,EAAM,GACd8K,EAAiB9K,EAAM,GACvB+K,EAAgB/K,EAAM,GACtBgL,EAAUhL,EAAM,GAChBiL,EAASjL,EAAM,GACfkL,EAAKlL,EAAM,GAajB,OATG8B,EAAKiE,SACJqE,EAAU,CACNpE,gBAAiB2E,GAErBN,EAAW,CACPrE,gBAAiB4E,IAKrBzF,EAAAC,EAAAC,cAAA,OAAKC,UAAWgF,EAAYrE,QAASvB,KAAKN,YAAaK,MAAO2F,GAC1DjF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBW,QAASvB,KAAKiF,kBAAmBlF,MAAO4F,GACrE3F,KAAKsF,YACN7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACTN,GAELG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,QAAQhD,UAAU,6BACvBuF,GAEL1F,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,kBAAkBhD,UAAU,sCACjCwF,GAEL3F,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,iBAAiBhD,UAAU,qCAChCyF,GAEL5F,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,UAAUhD,UAAU,+BACzB0F,GAEL7F,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,SAAShD,UAAU,8BACxB2F,GAEL9F,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,KAAKhD,UAAU,0BACpB4F,IAGT/F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,sBACAH,EAAAC,EAAAC,cAAC8F,EAAD,CAAWpC,KAAMlB,EAAWE,WAAS,IACrC5C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,SACAH,EAAAC,EAAAC,cAAC8F,EAAD,CAAWpC,KAAMjB,KAErB3C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAqBW,QAASvB,KAAKuE,aAArD,YACA9D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAqBW,QAASvB,KAAKuE,aAArD,iBAlJkB7C,aCDjBgF,qBACjB,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAA+C,OAAAC,EAAA,EAAAD,CAAA3C,KAAA0G,IACf9G,EAAA+C,OAAAE,EAAA,EAAAF,CAAA3C,KAAA2C,OAAAG,EAAA,EAAAH,CAAA+D,GAAA3D,KAAA/C,KAAML,KAWVgH,YAAc,WACV/G,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYmB,eAEtB2C,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,KACpByC,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLP,GAAI,EACJnJ,aAAc,MA3BHuC,EA+BnBoH,YAAc,WACV,IACIC,EADAC,EAAWtH,EAAKsD,MAAMiD,MAAQ,EAE9BgB,EAAcvH,EAAKD,MAAMwH,YAO7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYI,mBAC7B,MACJ,KAAK,EACD+K,EAAS,CAAE7J,KAAMtB,EAAYU,mBAC7B,MACJ,QACIyK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAMC,SAIpBqE,EAAKoD,SAAS,CACVmD,MAAOe,EACPN,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLP,GAAI,EACJnJ,aAAc4J,GAAUA,EAAO7J,QAxEpBwC,EA4EnBwH,WAAa,WACT,IACIH,EADAC,EAAWtH,EAAKsD,MAAM0D,KAAO,EAE7BO,EAAcvH,EAAKD,MAAMwH,YAM7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYK,yBAC7B,MACJ,KAAK,EACD8K,EAAS,CAAE7J,KAAMtB,EAAYW,yBAC7B,MACJ,QACIwK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAME,QAIpBoE,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAMM,EACNL,KAAM,EACNC,IAAK,EACLC,IAAK,EACLP,GAAI,EACJnJ,aAAc4J,GAAUA,EAAO7J,QApHpBwC,EAwHnByH,WAAa,WACT,IACIJ,EADAC,EAAWtH,EAAKsD,MAAM2D,KAAO,EAE7BM,EAAcvH,EAAKD,MAAMwH,YAO7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYM,yBAC7B,MACJ,KAAK,EACD6K,EAAS,CAAE7J,KAAMtB,EAAYY,yBAC7B,MACJ,QACIuK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAMG,QAIpBmE,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAM,EACNC,KAAMK,EACNJ,IAAK,EACLC,IAAK,EACLP,GAAI,EACJnJ,aAAc4J,GAAUA,EAAO7J,QAjKpBwC,EAqKnB0H,UAAY,WACR,IACIL,EADAC,EAAWtH,EAAKsD,MAAM4D,IAAM,EAE5BK,EAAcvH,EAAKD,MAAMwH,YAO7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYO,qBAC7B,MACJ,KAAK,EACD4K,EAAS,CAAE7J,KAAMtB,EAAYa,qBAC7B,MACJ,QACIsK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAMI,OAIpBkE,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAM,EACNC,KAAM,EACNC,IAAKI,EACLH,IAAK,EACLP,GAAI,EACJnJ,aAAc4J,GAAUA,EAAO7J,QA9MpBwC,EAkNnB2H,UAAY,WACR,IACIN,EADAC,EAAWtH,EAAKsD,MAAM6D,IAAM,EAE5BI,EAAcvH,EAAKD,MAAMwH,YAO7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYQ,oBAC7B,MACJ,KAAK,EACD2K,EAAS,CAAE7J,KAAMtB,EAAYc,oBAC7B,MACJ,QACIqK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAMK,OAIpBiE,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAKG,EACLV,GAAI,EACJnJ,aAAc4J,GAAUA,EAAO7J,QA3PpBwC,EA+PnB4H,SAAW,WACP,IACIP,EADAC,EAAWtH,EAAKsD,MAAMsD,GAAK,EAE3BW,EAAcvH,EAAKD,MAAMwH,YAM7B,OAJGD,EAAW,IACVA,EAAW,GAGRA,GACH,KAAK,EACDD,EAAS,CAAE7J,KAAMtB,EAAYS,wBAC7B,MACJ,KAAK,EACD0K,EAAS,CAAE7J,KAAMtB,EAAYe,wBAC7B,MACJ,QACIoK,EAAS,QAIH,UAAXA,GACCrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYD,SAEtB+D,EAAKD,MAAMrC,SAASH,EAAUgK,MAE9BvH,EAAKD,MAAMrC,SAAS2J,GACpBrH,EAAKD,MAAMrC,SAAS,CAChBF,KAAM9B,EAAMM,MAIpBgE,EAAKoD,SAAS,CACVmD,MAAO,EACPS,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLP,GAAIU,EACJ7J,aAAc4J,GAAUA,EAAO7J,QAvSpBwC,EA2SnB6H,YAAc,WACV7H,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYiB,gBA7SP6C,EAiTnB8H,aAAe,SAAC3J,GACZ,IACI4J,EAEJ,OAHU/H,EAAKsD,MAAMnF,IAAW,GAI5B,KAAK,EACD4J,EAAW,MACX,MACJ,KAAK,EACDA,EAAW,MACX,MACJ,QACIA,EAAW,GAInB,0BAAA5G,OAA2BhD,EAA3B,KAAAgD,OAAqC4G,IAjUtB/H,EAoUnBgI,WAAa,SAACpD,GACV,IAAMpH,EAAOoH,EAAEK,OAAOgD,UAAUzG,cAChCxB,EAAKD,MAAMrC,SAAS,CAChBF,KAAMtB,EAAYiB,eAEtB6C,EAAKD,MAAMrC,SAASH,EAAUC,EAAMwC,EAAKsD,MAAM7F,gBAzUhCuC,EA4UnBkI,WAAa,WACT,OAAOvI,EAAUgB,IAAI,SAACnD,GAClB,IAAI2C,EAAQ,CACRe,gBAAe,IAAAC,OAAM3C,EAAMhB,KAG/B,OACIqD,EAAAC,EAAAC,cAAA,UACIE,IAAKzD,EACLmE,QAAS3B,EAAKgI,WACdhH,UAAU,kBACVb,MAAOA,GAEN3C,MAvVbwC,EAAKsD,MAAQ,CACTiD,MAAO,EACPS,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLP,GAAI,EACJnJ,aAAc,IATHuC,wEAgWf,IAAM6H,EAAczH,KAAKL,MAAM8H,YACzBN,EAAcnH,KAAKL,MAAMwH,YACzBY,EAAcZ,EAAc,gBAAkBnH,KAAK0H,aAAa,QAChE3H,EAAQ,CACVe,gBAAiBqG,GAA6B,iBAAbY,GAAhB,IAAAhH,OAAqD3C,EAAM+I,KAAkB,IAGlG,OACI1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,SAAUnG,QAASvB,KAAK2G,aAA7D,UAEJlG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWmH,EAAWhI,MAAOA,EAAOwB,QAASvB,KAAKyH,aAAcN,GAAe,SAE3F1G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,SAAUnG,QAASvB,KAAKgH,aAA7D,UAEJvG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,QAASnG,QAASvB,KAAKoH,YAA5D,oBAEJ3G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,QAASnG,QAASvB,KAAKqH,YAA5D,mBAEJ5G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,OAAQnG,QAASvB,KAAKsH,WAA3D,YAEJ7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,OAAQnG,QAASvB,KAAKuH,WAA3D,WAEJ9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAWZ,KAAK0H,aAAa,MAAOnG,QAASvB,KAAKwH,UAA1D,gBAIJC,GACIhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVZ,KAAK8H,sBAvYApG,cCG5BsG,sMAEFhI,KAAKL,MAAMrC,SAASH,sCAIpB,IAAMwC,EAAQK,KAAKL,OAAS,GACtBsI,EAActI,EAAMuD,OAASvD,EAAMuD,MAAMgF,YACzC5K,EAAWqC,EAAMrC,SACjB6K,EAAaxI,EAAMuD,MAAMkF,SACzB3D,EAAS9E,EAAMuD,MAAMuB,OACrBgD,EAAc9H,EAAMuD,MAAMuE,YAC1BrH,EAAaT,EAAMuD,MAAM9C,WACzBuE,EAAasD,EAAY5G,OACzBgH,EAAW1I,EAAMuD,MAAMmF,SACvBC,EAAiBL,EAAY5G,OAAS,GAAM4G,EAAY1H,IAAI,SAACV,GACnE,IAAMgB,EAAMhB,EAAQwB,QAAUxB,EAAQ,GACpC,OAAOY,EAAAC,EAAAC,cAAC4H,EAAD,CAAM1I,QAASA,EAASgB,IAAKA,EAAKvD,SAAUA,EAAU8C,WAAYA,OACpE,GAEP,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC6H,EAAD,CACElL,SAAUA,EACVmK,YAAaA,EACbN,YAAakB,IAEf5H,EAAAC,EAAAC,cAAC8H,EAAD,CACExF,QAASkF,EACT7K,SAAUA,EACV4G,KAAM+D,EACNnI,GAAI2E,EACJE,WAAYA,IAEb2D,UAlCgB5G,cA4CVgH,cAHE,SAACxF,GAAD,MAAY,CAACA,UAGfwF,CAAkBV,GC1C3BW,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzL,KAAK,SAAA6L,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtG,QACfiG,UAAUC,cAAcO,WAK1B1I,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBhD,MAAM,SAAAC,GACL8C,QAAQ9C,MAAM,4CAA6CA,wBCqClDyL,cAAgB,CAC7B1B,YAlHkB,WAAwB,IACtC2B,EADe3G,EAAuBpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAImF,EAAWnF,UAAAT,OAAA,EAAAS,UAAA,QAAAC,EAG1C,OAAOkF,EAAO7J,MACZ,KAAKtB,EAAYC,uBAGjB,KAAKD,EAAYE,qBACf6N,EAAe5C,EAAOpJ,QACtB,MACF,KAAK/B,EAAYI,kBACf2N,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYK,wBACf0N,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYM,wBACfyN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYO,oBACfwN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYQ,mBACfuN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYS,uBACfsN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQ3B,EAAE,GAAG,GAAK2B,EAAE,GAAG,KACzD,MACF,KAAKvG,EAAYU,kBACfqN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYW,wBACfoN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYY,wBACfmN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYa,oBACfkN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYc,mBACfiN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYe,uBACfgN,EAAe3G,EAAMpF,QAAQgM,KAAK,SAACpJ,EAAG2B,GAAJ,OAAQA,EAAE,GAAG,GAAK3B,EAAE,GAAG,KACzD,MACF,KAAK5E,EAAYoB,eACf2M,EAAe3G,EAAMpF,QAAQC,OAAO,SAACC,GAAD,OAASA,EAAK,GAAGC,QAAQgJ,EAAOpJ,UAAU,IAC9E,MACF,QACEgM,EAAe3G,EAGnB,OAAO2G,GA8DPxB,SApBe,WAAuB,IAAtBnF,EAAsBpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAd,EAAGmF,EAAWnF,UAAAT,OAAA,EAAAS,UAAA,QAAAC,EACtC,OAAQkF,EAAO7J,MACb,KAAKtB,EAAYmB,aACf,OAAOgK,EAAOpJ,SAAW,EAC3B,QACE,OAAOqF,IAgBX9C,WA1CiB,WAA0B,IAAzB8C,EAAyBpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAjB,KAC1B,QAD2CA,UAAAT,OAAA,EAAAS,UAAA,QAAAC,GAC5B3E,MACb,KAAKtB,EAAYP,MACf,OAAO,EACT,KAAKO,EAAYN,KACf,OAAO,EACT,KAAKM,EAAYL,KACf,OAAO,EACT,KAAKK,EAAYJ,IACf,OAAO,EACT,KAAKI,EAAYH,IACf,OAAO,EACT,KAAKG,EAAYF,GACf,OAAO,EACT,KAAKE,EAAYD,OACf,OAAO,KACT,QACE,OAAOqH,IA0BXuE,YApDkB,WAA2B,IAA1BvE,EAA0BpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,IAAAA,UAAA,GAC7C,QAD6CA,UAAAT,OAAA,EAAAS,UAAA,QAAAC,GAC9B3E,MACb,KAAKtB,EAAYiB,aACf,OAAQmG,EACV,QACE,OAAOA,IAgDXkF,SA9De,WAA2B,IAA1BlF,EAA0BpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,IAAAA,UAAA,GAC1C,QAD0CA,UAAAT,OAAA,EAAAS,UAAA,QAAAC,GAC5B3E,MACZ,KAAKtB,EAAYgB,OACf,OAAQoG,EACV,QACE,OAAOA,IA0DXuB,OAfa,WAAuB,IAAtBvB,EAAsBpB,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAd,EAAGmF,EAAWnF,UAAAT,OAAA,EAAAS,UAAA,QAAAC,EACpC,OAAQkF,EAAO7J,MACb,KAAKtB,EAAYkB,WACf,OAAOiK,EAAOpJ,QAChB,QACE,OAAOqF,MC1GE6G,cAAYC,EAFL,GAE6BC,YAAgBC,MCE/DC,EACA1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAUC,MAAOA,GACb5J,EAAAC,EAAAC,cAAC2J,EAAD,OAIRC,IAASC,OAAOL,EAAMM,SAASC,eAAe,SHM/B,WACb,GAA6C,kBAAmBvB,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,WAAwB/B,OAAOC,UAC3C+B,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAAnI,OAAM6J,WAAN,sBAEPjC,GAiDV,SAAiCO,GAE/B1L,MAAM0L,GACHzL,KAAK,SAAAwG,GAGkB,MAApBA,EAAS8G,SACuD,IAAhE9G,EAAS+G,QAAQC,IAAI,gBAAgBhN,QAAQ,cAG7CkL,UAAUC,cAAc8B,MAAMzN,KAAK,SAAA6L,GACjCA,EAAa6B,aAAa1N,KAAK,WAC7BoL,OAAOC,SAASsC,aAKpBnC,EAAgBC,KAGnBhL,MAAM,WACL+C,QAAQC,IACN,mEArEAmK,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAMzN,KAAK,WACjCwD,QAAQC,IACN,+GAMJ+H,EAAgBC,MGjCxBoC","file":"static/js/main.8e986632.chunk.js","sourcesContent":["export const stats = {\r\n    SPEED : \"SPEED\",\r\n    SDEF  : \"SDEF\",\r\n    SATT  : \"SATT\",\r\n    DEF   : \"DEF\",\r\n    ATT   : \"ATT\",\r\n    HP    : \"HP\",\r\n    NOSTAT: \"NOSTAT\"\r\n}\r\n\r\nexport const actionNames = {\r\n  FETCH_POKEDEX_SUCCEDED  : \"FETCH_POKEDEX_SUCCEDED\",\r\n  FETCH_POKEDEX_FAILED    : \"FETCH_POKEDEX_FAILED\",\r\n  FETCH_LOADING           : \"FETCH_LOADING\",\r\n  SORT_BY_SPEED_ASC       : \"SORT_BY_SPEED_ASC\",\r\n  SORT_BY_SPECIAL_DEF_ASC : \"SORT_BY_SPECIAL_DEF_ASC\",\r\n  SORT_BY_SPECIAL_ATT_ASC : \"SORT_BY_SPECIAL_ATT_ASC\",\r\n  SORT_BY_DEFENSE_ASC     : \"SORT_BY_DEFENSE_ASC\",\r\n  SORT_BY_ATTACK_ASC      : \"SORT_BY_ATTACK_ASC\",\r\n  SORT_BY_HIT_POINTS_ASC  : \"SORT_BY_HIT_POINTS_ASC\",\r\n  SORT_BY_SPEED_DES       : \"SORT_BY_SPEED_DES\",\r\n  SORT_BY_SPECIAL_DEF_DES : \"SORT_BY_SPECIAL_DEF_DES\",\r\n  SORT_BY_SPECIAL_ATT_DES : \"SORT_BY_SPECIAL_ATT_DES\",\r\n  SORT_BY_DEFENSE_DES     : \"SORT_BY_DEFENSE_DES\",\r\n  SORT_BY_ATTACK_DES      : \"SORT_BY_ATTACK_DES\",\r\n  SORT_BY_HIT_POINTS_DES  : \"SORT_BY_HIT_POINTS_DES\",\r\n  TOGGLE                  : \"TOGGLE\",\r\n  TOGGLE_TYPES            : \"TOGGLE_TYPES\",\r\n  SPEED                   : stats.SPEED,\r\n  SDEF                    : stats.SDEF,\r\n  SATT                    : stats.SATT,\r\n  DEF                     : stats.DEF,\r\n  ATT                     : stats.ATT,\r\n  HP                      : stats.HP,\r\n  NOSTAT                  : stats.NOSTAT,\r\n  CURRENT_ID              : \"CURRENT_ID\",\r\n  CURRENT_TYPE            : \"CURRENT_TYPE\",\r\n  FILTER_BY_TYPE          : \"FILTER_BY_TYPE\"\r\n};\r\n\r\nexport function fetchData(type, currentOrder) {\r\n    return (dispatch, getState) => {\r\n        const ENDPOINT = './pokedex_min.json';\r\n\r\n        dispatch({\r\n            type: actionNames.FETCH_LOADING\r\n        });\r\n\r\n        return fetch(ENDPOINT)\r\n            .then(res => res.json())\r\n            .then(pokemons => {\r\n                if(type && type !== 'all'){\r\n                    dispatch({\r\n                        type: actionNames.FETCH_POKEDEX_SUCCEDED,\r\n                        payload: pokemons.slice().filter((item)=>(item[3].indexOf(type)>-1))\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: actionNames.FETCH_POKEDEX_SUCCEDED,\r\n                        payload: pokemons\r\n                    });\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(type){\r\n                    dispatch({\r\n                        type: actionNames.CURRENT_TYPE,\r\n                        payload: type\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(currentOrder){\r\n                    dispatch({\r\n                        type: currentOrder\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: actionNames.FETCH_POKEDEX_FAILED,\r\n                    payload: error\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function setType(type) {\r\n    return (dispatch) => {\r\n        let typePromise = new Promise((resolve, reject)=>resolve());\r\n\r\n        return typePromise.then(()=>(\r\n            dispatch({\r\n                type: actionNames.CURRENT_TYPE,\r\n                payload: type\r\n            })\r\n        ));\r\n    }\r\n}","const TYPES = {\r\n    normal: 'A8A77A',\r\n    fire: 'EE8130',\r\n    water: '6390F0',\r\n    electric: 'F7D02C',\r\n    grass: '7AC74C',\r\n    ice: '96D9D6',\r\n    fighting: 'C22E28',\r\n    poison: 'A33EA1',\r\n    ground: 'E2BF65',\r\n    flying: 'A98FF3',\r\n    psychic: 'F95587',\r\n    bug: 'A6B91A',\r\n    rock: 'B6A136',\r\n    ghost: '735797',\r\n    dragon: '6F35FC',\r\n    dark: '705746',\r\n    steel: 'B7B7CE',\r\n    fairy: 'D685AD'\r\n};\r\n\r\nconst TYPENAMES = [\r\n    'all',\r\n    'bug',\r\n    'dark',\r\n    'dragon',\r\n    'electric',\r\n    'fairy',\r\n    'fighting',\r\n    'fire',\r\n    'flying',\r\n    'ghost',\r\n    'grass',\r\n    'ground',\r\n    'ice',\r\n    'normal',\r\n    'poison',\r\n    'psychic',\r\n    'rock',\r\n    'steel',\r\n    'water'\r\n]\r\n\r\nconst ACTIONS = {\r\n    TOGGLE: 'TOGGLE',\r\n    CURRENT_ID: 'CURRENT_ID'\r\n}\r\n\r\nexport {\r\n    TYPES,\r\n    ACTIONS,\r\n    TYPENAMES\r\n};","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { TYPES, ACTIONS } from '../helpers/constants';\r\nimport { stats as STATS } from '../../state/actions';\r\n\r\nexport default class Card extends Component {\r\n  handleClick = () => {\r\n    const props = this.props;\r\n    const pokemon = (props && props.pokemon) || [];\r\n    const dispatch = props.dispatch;\r\n    const id = pokemon[0];\r\n\r\n    if(dispatch && typeof dispatch === 'function'){\r\n      dispatch({\r\n        type: ACTIONS.CURRENT_ID,\r\n        payload: id\r\n      });\r\n\r\n      dispatch({\r\n        type: ACTIONS.TOGGLE\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n    const pokemon = (props && props.pokemon) || [];\r\n    const id = pokemon[0];\r\n    const name = pokemon[1];\r\n    const image = pokemon[2];\r\n    const type = pokemon[3];\r\n    const stats = pokemon[6] || [];\r\n    const currentFilter = props && props.currFilter;\r\n    const currentStat = (currentFilter>=0) && stats[currentFilter];\r\n    const types = type.map((item, index)=><li className=\"Card_types_list\" key={item} style={{backgroundColor: `#${TYPES[type[index]]}`}}>{item}</li>);\r\n    let statClass = '';\r\n    let style;\r\n\r\n    console.log(currentStat);\r\n\r\n    switch (currentFilter) {\r\n      case 0:\r\n        statClass = STATS.SPEED;\r\n        break;\r\n      case 1:\r\n        statClass = STATS.SDEF;\r\n        break;\r\n      case 2:\r\n        statClass = STATS.SATT;\r\n        break;\r\n      case 3:\r\n        statClass = STATS.DEF;\r\n        break;\r\n      case 4:\r\n        statClass = STATS.ATT;\r\n        break;\r\n      case 5:\r\n        statClass = STATS.HP;\r\n        break;\r\n      default:\r\n        statClass = STATS.NOSTAT;\r\n        break;\r\n    }\r\n\r\n    statClass = statClass.toLowerCase();\r\n    \r\n    if(type.length >= 2) {\r\n      style = {\r\n        backgroundImage: `linear-gradient(to bottom, #${TYPES[type[0]]} 0%,#${TYPES[type[1]]} 100%)`\r\n      };\r\n    } else if (type.length === 1) {\r\n      style = {\r\n        backgroundColor: `#${TYPES[type[0]]}`\r\n      };\r\n    }\r\n\r\n    return (\r\n        <button className=\"Card\" onClick={this.handleClick} style={style}>\r\n          <span className=\"Card_bg_container\"><span className={'Card_bg_name'}>{name}</span></span>\r\n          <span className=\"Card_id\">{id}</span>\r\n          {(currentFilter >= 0 && currentFilter != null) && <span className={`Card_currStat ${statClass}`}>{currentStat}</span>}\r\n          <span className=\"Card_name\">{name}</span>\r\n          <img className=\"Card_image\" alt={name} src={`./imagefront/${image}`}/>\r\n          <ul className=\"Card_types\">\r\n            {types}\r\n          </ul>\r\n        </button>\r\n    );\r\n  }\r\n}","function hexToRgba(color, alpha = 1, hue = 0) {\r\n    if (color.charAt(0) === '#') {\r\n        color = color.substr(1);\r\n    }\r\n    if ((color.length < 2) || (color.length > 6)) {\r\n        return '';\r\n    }\r\n    var values = color.split(''),\r\n        r,\r\n        g,\r\n        b;\r\n\r\n    if (color.length === 2) {\r\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n        g = r;\r\n        b = r;\r\n    } else if (color.length === 3) {\r\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\r\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\r\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\r\n    } else if (color.length === 6) {\r\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\r\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n    r = r - hue;\r\n    g = g - hue;\r\n    b = b - hue;\r\n\r\n    r = (r < 0) ? 0 : r;\r\n    g = (g < 0) ? 0 : g;\r\n    b = (b < 0) ? 0 : b;\r\n\r\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n}\r\n\r\nexport {\r\n    hexToRgba\r\n}","import React, { Component } from 'react';\r\nimport { TYPES } from '../helpers/constants';\r\nimport { hexToRgba } from '../helpers';\r\nimport './index.css';\r\n\r\nexport default class Ability extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {display: false}\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            display: !this.state.display\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const abilities = props.abilities;\r\n        const display = this.state.display;\r\n        const moves = props.moves;\r\n        const isAbility = abilities;\r\n        const buttonClassNames = `ability_button ${display && 'display'}`;\r\n        let button = '';\r\n\r\n        if(isAbility) {\r\n            const name = abilities[0];\r\n            const description = abilities[1];\r\n\r\n            button = (\r\n                <div className=\"ability\">\r\n                    <button className={buttonClassNames} onClick={this.handleClick}>\r\n                        {name}\r\n                    </button>\r\n                    {\r\n                        display && <div className=\"ability_description\">\r\n                            {description}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            );\r\n        } else {\r\n            const name = moves[0];\r\n            const type = moves[1];\r\n            const effect = moves[2];\r\n            const accuracy = moves[3];\r\n            const damage = moves[4];\r\n\r\n            button = (\r\n                <div className=\"ability\">\r\n                    <button onClick={this.handleClick} className={buttonClassNames} style={{backgroundColor: `${hexToRgba(TYPES[type], 0.5)}`}}>\r\n                        { (accuracy || damage) && (\r\n                            <span className=\"ability_stats\">\r\n                                {\r\n                                    accuracy && <span className=\"ability_stats-acc\" title=\"Accuracy\">\r\n                                        {accuracy}\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    damage && <span className=\"ability_stats-dmg\" title=\"Damage\">\r\n                                        {damage}\r\n                                    </span>\r\n                                }\r\n                            </span>)\r\n                        }\r\n                        <span className=\"ability_name\">\r\n                            {name}\r\n                        </span>\r\n                        <span className=\"ability_type\" style={{backgroundColor: `#${TYPES[type]}`}}>\r\n                            {type}\r\n                        </span>\r\n                    </button>\r\n                    {\r\n                        display && <div className=\"ability_description\">\r\n                            {effect}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <li className=\"ability\">\r\n                { button }\r\n            </li>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Ability from '../Ability';\r\n\r\nexport default class Abilities extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            abilities: {},\r\n            moves: {}\r\n        }\r\n    }\r\n\r\n    getButton = (item) => {\r\n        const state = this.state;\r\n        const abilities = state.abilities && state.abilities[item-1];\r\n        const moves = state.moves && state.moves[item-1];\r\n        const key = (moves && moves[0]) || (abilities && abilities[0]);\r\n\r\n        return (\r\n            <Ability\r\n                abilities={abilities}\r\n                moves={moves}\r\n                key={key}\r\n            />\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const props = this.props;\r\n        const isAbility = props.isAbility;\r\n\r\n        if(isAbility){\r\n            fetch('./abilities_min.json')\r\n            .then((response)=>{\r\n                return response.json();\r\n            })\r\n            .then((data)=>{\r\n                this.setState({\r\n                    abilities: data\r\n                })\r\n            })\r\n            .catch(\r\n                this.setState({\r\n                    abilities: {}\r\n                })\r\n            );\r\n        } else {\r\n            fetch('./moves_min.json')\r\n            .then((response)=>{\r\n                return response.json();\r\n            })\r\n            .then((data)=>{\r\n                this.setState({\r\n                    moves: data\r\n                })\r\n            })\r\n            .catch(\r\n                this.setState({\r\n                    moves: {}\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const list  = props.list || [];\r\n\r\n        const items = list.map((item)=>(\r\n                this.getButton(item)\r\n            )\r\n        );\r\n\r\n        return (\r\n            <ul className=\"lightBox_abilities\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n}","import React, { Component , Fragment } from 'react';\r\nimport './index.css';\r\nimport { TYPES, ACTIONS } from '../helpers/constants';\r\nimport { hexToRgba } from '../helpers';\r\nimport Abilities from '../Abilities';\r\n\r\nexport default class LightBox extends Component {\r\n    handleClick = () => {\r\n        const props = this.props;\r\n        const dispatch = props.dispatch;\r\n\r\n        if(typeof dispatch === 'function'){\r\n            dispatch({\r\n                type: ACTIONS.TOGGLE\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSlide = (e) => {\r\n        const props = this.props;\r\n        const id = props.id;\r\n        const data = props.data || [];\r\n        const currId = data.length && data.findIndex((item)=>item[0] === id);\r\n        const totalItems = props.totalItems - 1;\r\n        const dispatch = props.dispatch;\r\n        const classNameList = e.target.classList;\r\n        const newId = classNameList.contains('prev') ? (currId - 1) : (currId + 1);\r\n        let fallBackId = (newId >= 1) ? newId : (totalItems);\r\n\r\n        fallBackId = (fallBackId <= totalItems) ? fallBackId : 1;\r\n\r\n        if(typeof dispatch === 'function'){\r\n            dispatch({\r\n                type: ACTIONS.CURRENT_ID,\r\n                payload: data[fallBackId][0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleButtonClick = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    getGradient = (colora, colorb) => {\r\n        return `linear-gradient(to bottom, ${colora} 0%,${colorb || colora} 100%)`\r\n    }\r\n\r\n    getHeader = () => {\r\n        const props = this.props;\r\n        const data = props.data || [];\r\n        const id = props.id;\r\n        const currId = data.length && data.findIndex((item)=>item[0] === id);\r\n        const currentData = data[currId] || [];\r\n        const name = currentData[1];\r\n        const type = currentData[3] || [];\r\n        let styleNames;\r\n\r\n        if(type.length) {\r\n            styleNames = {\r\n                color: `${hexToRgba(TYPES[type[0]], 0.3, 20)}`\r\n            };\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                    <div className='lightBox_imageContainer_name1' style={styleNames}>{name}</div>\r\n                    <div className='lightBox_imageContainer_name2' style={styleNames}>{name}</div>\r\n                    <div className='lightBox_imageContainer_name3' style={styleNames}>{name}</div>\r\n                    <div className='lightBox_imageContainer_name4' style={styleNames}>{name}</div>\r\n                    <div className='lightBox_imageContainer'>\r\n                        <img className='lightBox_image' alt={name} src={`./imagehd/${id}.png`}/>\r\n                    </div>\r\n                    <h3 className=\"lightBox_name\">{`#${id} ${name}`}</h3>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const display = props && props.display;\r\n        const displayClass = display ? 'show': '';\r\n        const classNames = `lightBox ${displayClass}`;\r\n        const data = props.data || [];\r\n        const id = props.id;\r\n        const currId = data.length && data.findIndex((item)=>item[0] === id);\r\n        const currentData = data[currId] || [];\r\n        const type = currentData[3] || [];\r\n        const moves = currentData[4] || [];\r\n        const abilities = currentData[5] || [];\r\n        const types = type.map((item, index)=><li className='lightBox_types_list' key={item} style={{backgroundColor: `#${TYPES[type[index]]}`}}>{item}</li>);\r\n        const colorBgA = type.length && hexToRgba(TYPES[type[0]], 0.5);\r\n        const colorBgB = type.length && type[1] && hexToRgba(TYPES[type[1]], 0.5);\r\n        const colorBoxA = type.length && hexToRgba(TYPES[type[0]], 1);\r\n        const colorBoxB = type.length && type[1] && hexToRgba(TYPES[type[1]], 1);\r\n        const gradientBg = this.getGradient(colorBgA, colorBgB);\r\n        const gradientBox = this.getGradient(colorBoxA, colorBoxB);\r\n        const stats = (currentData && currentData[6]) || [];\r\n        const speed = stats[0];\r\n        const specialDefense = stats[1];\r\n        const specialAttack = stats[2];\r\n        const defense = stats[3];\r\n        const attack = stats[4];\r\n        const hp = stats[5];\r\n        let styleBg;\r\n        let styleBox;\r\n\r\n        if(type.length) {\r\n            styleBg = {\r\n                backgroundImage: gradientBg\r\n            };\r\n            styleBox = {\r\n                backgroundImage: gradientBox\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div className={classNames} onClick={this.handleClick} style={styleBg}>\r\n                <button className=\"lightBox_close\">Close</button>\r\n                <div className=\"lightBox_content\" onClick={this.handleButtonClick} style={styleBox}>\r\n                    {this.getHeader()}\r\n                    <div className=\"lightBox_info\">\r\n                        <h3 className='lightBox_heading'>Types</h3>\r\n                        <ul className='lightBox_types'>\r\n                            {types}\r\n                        </ul>\r\n                        <h3 className=\"lightBox_heading\">Stats</h3>\r\n                        <ul className='lightBox_stats'>\r\n                            <li title='Speed' className='lightBox_stats-item speed'>\r\n                                {speed}\r\n                            </li>\r\n                            <li title='special Defense' className='lightBox_stats-item specialDefense'>\r\n                                {specialDefense}\r\n                            </li>\r\n                            <li title='special Attack' className='lightBox_stats-item specialAttack'>\r\n                                {specialAttack}\r\n                            </li>\r\n                            <li title='Defense' className='lightBox_stats-item defense'>\r\n                                {defense}\r\n                            </li>\r\n                            <li title='Attack' className='lightBox_stats-item attack'>\r\n                                {attack}\r\n                            </li>\r\n                            <li title='HP' className='lightBox_stats-item hp'>\r\n                                {hp}\r\n                            </li>\r\n                        </ul>\r\n                        <h3 className='lightBox_heading'>Special Habilities</h3>\r\n                        <Abilities list={abilities} isAbility/>\r\n                        <h3 className='lightBox_heading'>Moves</h3>\r\n                        <Abilities list={moves}/>\r\n                    </div>\r\n                    <button className=\"lightBox_prev prev\" onClick={this.handleSlide}>Previous</button>\r\n                    <button className=\"lightBox_next next\" onClick={this.handleSlide}>Next</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { fetchData, actionNames, stats} from '../../state/actions';\r\nimport './index.css';\r\nimport { TYPENAMES, TYPES} from '../helpers/constants';\r\n\r\nexport default class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: ''\r\n        };\r\n    }\r\n    handleReset = () => {\r\n        this.props.dispatch({\r\n            type: actionNames.CURRENT_TYPE\r\n        });\r\n        this.props.dispatch({\r\n            type: actionNames.NOSTAT\r\n        });\r\n        this.props.dispatch(fetchData());\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: ''\r\n        });\r\n    };\r\n\r\n    sortBySpeed = () => {\r\n        let newState = this.state.speed + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_SPEED_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_SPEED_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.SPEED\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: newState,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n\r\n    sortBySDef = () => {\r\n        let newState = this.state.sDef + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_SPECIAL_DEF_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_SPECIAL_DEF_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.SDEF\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: newState,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n\r\n    sortBySAtt = () => {\r\n        let newState = this.state.sAtt + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_SPECIAL_ATT_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_SPECIAL_ATT_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.SATT\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: newState,\r\n            def: 0,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n\r\n    sortByDef = () => {\r\n        let newState = this.state.def + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_DEFENSE_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_DEFENSE_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.DEF\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: newState,\r\n            att: 0,\r\n            hp: 0,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n    \r\n    sortByAtt = () => {\r\n        let newState = this.state.att + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_ATTACK_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_ATTACK_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.ATT\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: newState,\r\n            hp: 0,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n\r\n    sortByHP = () => {\r\n        let newState = this.state.hp + 1;\r\n        let action;\r\n        let currentType = this.props.currentType;\r\n        \r\n        if(newState > 2) {\r\n            newState = 0;\r\n        }\r\n\r\n        switch(newState){\r\n            case 1:\r\n                action = { type: actionNames.SORT_BY_HIT_POINTS_ASC };\r\n                break;\r\n            case 2:\r\n                action = { type: actionNames.SORT_BY_HIT_POINTS_DES };\r\n                break;\r\n            default:\r\n                action = 'reset';\r\n            break;\r\n        }\r\n\r\n        if(action === 'reset') {\r\n            this.props.dispatch({\r\n                type: actionNames.NOSTAT\r\n            });\r\n            this.props.dispatch(fetchData(currentType));\r\n        } else {\r\n            this.props.dispatch(action);\r\n            this.props.dispatch({\r\n                type: stats.HP\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            speed: 0,\r\n            sDef: 0,\r\n            sAtt: 0,\r\n            def: 0,\r\n            att: 0,\r\n            hp: newState,\r\n            currentOrder: action && action.type\r\n        });\r\n    }\r\n\r\n    toggleTypes = () => {\r\n        this.props.dispatch({\r\n            type: actionNames.TOGGLE_TYPES\r\n        });\r\n    }\r\n\r\n    getClassName = (filter) => {\r\n        let dir = this.state[filter] || 0;\r\n        let dirClass;\r\n\r\n        switch (dir) {\r\n            case 1:\r\n                dirClass = 'asc';\r\n                break;\r\n            case 2:\r\n                dirClass = 'des';\r\n                break;\r\n            default:\r\n                dirClass = '';\r\n                break;\r\n        }\r\n\r\n        return `menu-list-button ${filter} ${dirClass}`;\r\n    }\r\n\r\n    handleType = (e) => {\r\n        const type = e.target.innerText.toLowerCase();\r\n        this.props.dispatch({\r\n            type: actionNames.TOGGLE_TYPES\r\n        });\r\n        this.props.dispatch(fetchData(type, this.state.currentOrder));\r\n    }\r\n\r\n    getButtons = () => {\r\n        return TYPENAMES.map((type) => {\r\n            let style = {\r\n                backgroundColor: `#${TYPES[type]}`\r\n            };\r\n            \r\n            return (\r\n                <button \r\n                    key={type}\r\n                    onClick={this.handleType}\r\n                    className='menu_types_list'\r\n                    style={style}\r\n                >\r\n                    {type}\r\n                </button>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const toggleTypes = this.props.toggleTypes;\r\n        const currentType = this.props.currentType;\r\n        const typeClass   = currentType ? 'type-selected' : this.getClassName('type');\r\n        const style = {\r\n            backgroundColor: currentType && (typeClass == 'type-selected') && `#${TYPES[currentType]}` || ''\r\n        };\r\n\r\n        return (\r\n            <nav className=\"menu\">\r\n                <ul className=\"menu-list\">\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('clear')} onClick={this.handleReset}>Clear</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={typeClass} style={style} onClick={this.toggleTypes}>{currentType || 'Type'}</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('speed')} onClick={this.sortBySpeed}>Speed</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('sDef')} onClick={this.sortBySDef}>special Defense</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('sAtt')} onClick={this.sortBySAtt}>special Attack</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('def')} onClick={this.sortByDef}>Defense</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('att')} onClick={this.sortByAtt}>Attack</button>\r\n                    </li>\r\n                    <li className=\"menu-list-item\">\r\n                        <button className={this.getClassName('hp')} onClick={this.sortByHP}>Hit Points</button>\r\n                    </li>\r\n                </ul>\r\n                {\r\n                    toggleTypes && (\r\n                        <div className=\"menu-types\">\r\n                            {this.getButtons()}\r\n                        </div>\r\n                    )\r\n                }\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../state/actions';\r\nimport Card from '../components/Card';\r\nimport LightBox from '../components/LightBox';\r\nimport Menu from '../components/Menu';\r\nimport './MainLayout.css';\r\n\r\nclass MainLayout extends Component {\r\n  componentWillMount() {\r\n    this.props.dispatch(fetchData());\r\n  }\r\n  \r\n  render() {\r\n    const props = this.props || {};\r\n    const pokeDexData = props.state && props.state.pokedexData;\r\n    const dispatch = props.dispatch;\r\n    const displayBox = props.state.lightBox;\r\n    const currId = props.state.currId;\r\n    const toggleTypes = props.state.toggleTypes;\r\n    const currFilter = props.state.currFilter;\r\n    const totalItems = pokeDexData.length;\r\n    const currType = props.state.currType;\r\n    const pokemonCards = ((pokeDexData.length > 0) && pokeDexData.map((pokemon)=>{\r\n    const key = pokemon.length && pokemon[1];\r\n      return <Card pokemon={pokemon} key={key} dispatch={dispatch} currFilter={currFilter}/>\r\n    })) || '';\r\n\r\n    return (\r\n      <div className=\"layout\">\r\n        <Menu\r\n          dispatch={dispatch}\r\n          toggleTypes={toggleTypes}\r\n          currentType={currType}\r\n        />\r\n        <LightBox\r\n          display={displayBox}\r\n          dispatch={dispatch}\r\n          data={pokeDexData}\r\n          id={currId}\r\n          totalItems={totalItems}\r\n        />\r\n        {pokemonCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Passing the ubigeos data from the global state to the container\r\nconst mapState = (state) => ({state});\r\n\r\n// export the component connected to the global state\r\nexport default connect(mapState)(MainLayout);\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { actionNames } from './actions';\r\n\r\nconst pokedexData = (state = [], action) => {\r\n  let bodyResponse;\r\n  \r\n  switch(action.type) {\r\n    case actionNames.FETCH_POKEDEX_SUCCEDED:\r\n      bodyResponse = action.payload;\r\n      break;\r\n    case actionNames.FETCH_POKEDEX_FAILED:\r\n      bodyResponse = action.payload;\r\n      break;\r\n    case actionNames.SORT_BY_SPEED_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][0] - b[6][0]);\r\n      break;\r\n    case actionNames.SORT_BY_SPECIAL_DEF_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][1] - b[6][1]);\r\n      break;\r\n    case actionNames.SORT_BY_SPECIAL_ATT_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][2] - b[6][2]);\r\n      break;\r\n    case actionNames.SORT_BY_DEFENSE_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][3] - b[6][3]);\r\n      break;\r\n    case actionNames.SORT_BY_ATTACK_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][4] - b[6][4]);\r\n      break;\r\n    case actionNames.SORT_BY_HIT_POINTS_ASC:\r\n      bodyResponse = state.slice().sort((a, b)=>a[6][5] - b[6][5]);\r\n      break;\r\n    case actionNames.SORT_BY_SPEED_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][0] - a[6][0]);\r\n      break;\r\n    case actionNames.SORT_BY_SPECIAL_DEF_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][1] - a[6][1]);\r\n      break;\r\n    case actionNames.SORT_BY_SPECIAL_ATT_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][2] - a[6][2]);\r\n      break;\r\n    case actionNames.SORT_BY_DEFENSE_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][3] - a[6][3]);\r\n      break;\r\n    case actionNames.SORT_BY_ATTACK_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][4] - a[6][4]);\r\n      break;\r\n    case actionNames.SORT_BY_HIT_POINTS_DES:\r\n      bodyResponse = state.slice().sort((a, b)=>b[6][5] - a[6][5]);\r\n      break;\r\n    case actionNames.FILTER_BY_TYPE: \r\n      bodyResponse = state.slice().filter((item)=>(item[3].indexOf(action.payload)>-1));\r\n      break;\r\n    default:\r\n      bodyResponse = state;\r\n  }\r\n\r\n  return bodyResponse;\r\n}\r\n\r\nconst lightBox = (state = false, action) => {\r\n  switch(action.type) {\r\n    case actionNames.TOGGLE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst toggleTypes = (state = false, action) => {\r\n  switch (action.type) {\r\n    case actionNames.TOGGLE_TYPES:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst currFilter = (state = null, action) => {\r\n  switch (action.type) {\r\n    case actionNames.SPEED:\r\n      return 0;\r\n    case actionNames.SDEF:\r\n      return 1;\r\n    case actionNames.SATT:\r\n      return 2;\r\n    case actionNames.DEF:\r\n      return 3;\r\n    case actionNames.ATT:\r\n      return 4;\r\n    case actionNames.HP:\r\n      return 5;\r\n    case actionNames.NOSTAT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst currType = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case actionNames.CURRENT_TYPE:\r\n      return action.payload || 0;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst currId = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case actionNames.CURRENT_ID:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  pokedexData,\r\n  currType,\r\n  currFilter,\r\n  toggleTypes,\r\n  lightBox,\r\n  currId\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nexport default createStore(reducer, INITIAL_STATE, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainLayout from './containers/MainLayout';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nlet page = (\n    <Provider store={store}>\n        <MainLayout />\n    </Provider>\n);\n\nReactDOM.render(page, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}